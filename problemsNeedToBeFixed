- Create blog or community
- issues with performance of the loading
- working with error messages from graphQL in front-end
- deleting resource
- make the website responsive
- load more on suggestions
- finnishing the Oauth process at JWT
- setting up adsense

!!!! Problmes above are fixed !!!!

* skip && limit problom for search 
* sort content by upvotes
* recommendation algorithm
  - filter by search keywords (if searched)
  - filter by user interests (upvoted)(if search and recomendation)
  - filter by content volume in topic (if topic)(if search and recomendation)
  - sort content by upvotes (if search and recomendation)
  - skip and limit
  // Steps
    
    get topics by recomed
      - get topics 
      - sort by user interests (upvotes)
      - dont skip and limit
    
    get topics by search
      - filter by search keywords
      - remove duplicates
      - sort by user interests (upvotes)
      - skip and limit 
    
    get content by recomend
      - get topics 
      - sort by user interests
      - dont skip and limit
    
    get content by search
      - filter by search keywords
      - remove duplicates
      - sort by user interests (upvotes)
      - skip and limit 


- To exectute upvotes (add another upvote or delete an upvote) see:
https://mongoosejs.com/docs/queries.html

- To implement skip limit in js without mongoose see:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice

# Write your query or mutation here

query{
  # searchTopic(limit:4,skip:0,search_term:"learn C++ in a good way"){
  #     _id
  #     topic_title
  # }
  #  getTopics(limit:4,skip:0){
  #     _id
  #     topic_title
  # }
  getTopic(topic_id:"60353db272feeb609cb5af2b",limit:5,skip:0) {
    _id
    creator_name
    topic_title
    docs {
      _id
      topic_id
      creator_name
      docs_title
      docs_link
    }
  }
}

# Write your query or mutation here

query {
  searchTopic(limit:4,skip:4,search_term:"learn C++ in a good way"){
      _id
      title
  }
   getTopics(limit:4,skip:0){
      _id
      title
  }
  getTopic(topic_id: "60353db272feeb609cb5af2b", limit: 5, skip: 0) {
    _id
    creator_name
    title
    docs {
      _id
      topic_id
      creator_name
      title
      docs_link
    }
  }
}

// Graphql Queries to be used

query {
  # searchTopic(limit: 20, skip:0, search_term: "Ruby"){
  #   _id,
  #   background_image,
  #   title
  # }
  # getTopics(limit: 1, skip:2){
  #   _id,
  #   background_image,
  #   title
  # }
  # getTopic (limit:10,skip:0,topic_id: "603567695d97a836cce44725") {
  #   _id,
  #   title,
  #   docs {
  #     _id,
  #     title,
  #     link
  #   }
  #   articles {_id,title,link}
  # }
}
mutation ($type: String!, $resource_id:String!) {
  upvote( type:$type, resource_id:$resource_id ){ upvoted }
}